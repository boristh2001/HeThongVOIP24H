@model List<ApiMVC.Models.CallHistory>
@{
    ViewBag.Title = "GetHistoryCall";
}


<style>
    .wrap {
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}

.button {
  min-width: 300px;
  min-height: 60px;
  font-family: 'Nunito', sans-serif;
  font-size: 22px;
  text-transform: uppercase;
  letter-spacing: 1.3px;
  font-weight: 700;
  color: #313133;
  background: #4FD1C5;
background: linear-gradient(90deg, rgba(129,230,217,1) 0%, rgba(79,209,197,1) 100%);
  border: none;
  border-radius: 1000px;
  box-shadow: 12px 12px 24px rgba(79,209,197,.64);
  transition: all 0.3s ease-in-out 0s;
  cursor: pointer;
  outline: none;
  position: relative;
  padding: 10px;
  }

button::before {
content: '';
  border-radius: 1000px;
  min-width: calc(300px + 12px);
  min-height: calc(60px + 12px);
  border: 6px solid #00FFCB;
  box-shadow: 0 0 60px rgba(0,255,203,.64);
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  opacity: 0;
  transition: all .3s ease-in-out 0s;
}

.button:hover, .button:focus {
  color: #313133;
  transform: translateY(-6px);
}

button:hover::before, button:focus::before {
  opacity: 1;
}

button::after {
  content: '';
  width: 30px; height: 30px;
  border-radius: 100%;
  border: 6px solid #00FFCB;
  position: absolute;
  z-index: -1;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  animation: ring 1.5s infinite;
}

button:hover::after, button:focus::after {
  animation: none;
  display: none;
}

keyframes ring {
  0% {
    width: 30px;
    height: 30px;
    opacity: 1;
  }
  100% {
    width: 300px;
    height: 300px;
    opacity: 0;
  }
}
</style>
<script>
    function saveDatabase() {
        var xhr = new XMLHttpRequest();
        // Thiết lập hàm xử lý sự kiện khi nhận được kết quả từ server
        xhr.onreadystatechange = function () {
            if (this.readyState === 4 && this.status === 200) {
                // Xử lý kết quả trả về từ server
                var response = JSON.parse(this.responseText);
                // Lấy danh sách events từ kết quả trả về
                var responseData = response.data;
                console.log(responseData);
            }
        };
        // Gửi request đến server        
        xhr.open('GET', '/CallHistory/Index',true);
        xhr.send();
    }
</script>

<script src="https://kit.fontawesome.com/a36c5d7fce.js" crossorigin="anonymous"></script>
<table class="table table-bordered">
    <thead>
        <tr>
            <th>Ngày gọi</th>
            <th>Đầu số</th>
            <th>Số nhận</th>
            <th>Mã cuộc gọi</th>
            <th>Thời gian đàm thoại</th>
            <th>Thời lượng cuộc gọi</th>
            <th>Số gọi</th>
            <th>Trạng thái</th>
            <th>Loại cuộc gọi</th>
            <th>File ghi âm</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@string.Format("{0:dd/MM/yyyy HH:mm:ss}", item.CallDate)</td>
                <td>@item.Src</td>
                <td>@item.Dst</td>
                <td>@item.CallId</td>
                <td>@item.BillSec</td>
                <td>@item.Duration</td>
                <td>@item.Did</td>
                <td>@item.Status</td>
                @if (item.Type == "outbound")
                {
                    <td>Gọi ra </td>
                }
                else
                {
                    <td>Gọi vào</td>
                }
                <td>
                @if (!string.IsNullOrEmpty(item.Download))
                {
                    <a href="@item.Play" type="button">
                        <i class="fa-solid fa-download"></i>
                    </a>
                }
                else
                {
                    <span>No download available</span>
                }
                </td>
                
            </tr>
        }
    </tbody>
</table>
<div class="wrap">
    <button class="button" onclick="saveDatabase()">Save to database</button>
</div>